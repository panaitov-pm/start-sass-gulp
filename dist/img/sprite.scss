/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$arrow-name: 'arrow';
$arrow-x: 99px;
$arrow-y: 99px;
$arrow-offset-x: -99px;
$arrow-offset-y: -99px;
$arrow-width: 70px;
$arrow-height: 70px;
$arrow-total-width: 252px;
$arrow-total-height: 230px;
$arrow-image: 'img';
$arrow: (99px, 99px, -99px, -99px, 70px, 70px, 252px, 230px, 'img', 'arrow', );
$assortment-name: 'assortment';
$assortment-x: 99px;
$assortment-y: 0px;
$assortment-offset-x: -99px;
$assortment-offset-y: 0px;
$assortment-width: 99px;
$assortment-height: 99px;
$assortment-total-width: 252px;
$assortment-total-height: 230px;
$assortment-image: 'img';
$assortment: (99px, 0px, -99px, 0px, 99px, 99px, 252px, 230px, 'img', 'assortment', );
$basket-320-name: 'basket-320';
$basket-320-x: 0px;
$basket-320-y: 198px;
$basket-320-offset-x: 0px;
$basket-320-offset-y: -198px;
$basket-320-width: 35px;
$basket-320-height: 32px;
$basket-320-total-width: 252px;
$basket-320-total-height: 230px;
$basket-320-image: 'img';
$basket-320: (0px, 198px, 0px, -198px, 35px, 32px, 252px, 230px, 'img', 'basket-320', );
$basket-name: 'basket';
$basket-x: 198px;
$basket-y: 156px;
$basket-offset-x: -198px;
$basket-offset-y: -156px;
$basket-width: 41px;
$basket-height: 37px;
$basket-total-width: 252px;
$basket-total-height: 230px;
$basket-image: 'img';
$basket: (198px, 156px, -198px, -156px, 41px, 37px, 252px, 230px, 'img', 'basket', );
$checked-name: 'checked';
$checked-x: 169px;
$checked-y: 124px;
$checked-offset-x: -169px;
$checked-offset-y: -124px;
$checked-width: 17px;
$checked-height: 13px;
$checked-total-width: 252px;
$checked-total-height: 230px;
$checked-image: 'img';
$checked: (169px, 124px, -169px, -124px, 17px, 13px, 252px, 230px, 'img', 'checked', );
$deliverry-2-name: 'deliverry-2';
$deliverry-2-x: 198px;
$deliverry-2-y: 52px;
$deliverry-2-offset-x: -198px;
$deliverry-2-offset-y: -52px;
$deliverry-2-width: 52px;
$deliverry-2-height: 52px;
$deliverry-2-total-width: 252px;
$deliverry-2-total-height: 230px;
$deliverry-2-image: 'img';
$deliverry-2: (198px, 52px, -198px, -52px, 52px, 52px, 252px, 230px, 'img', 'deliverry-2', );
$delivery-name: 'delivery';
$delivery-x: 0px;
$delivery-y: 99px;
$delivery-offset-x: 0px;
$delivery-offset-y: -99px;
$delivery-width: 99px;
$delivery-height: 99px;
$delivery-total-width: 252px;
$delivery-total-height: 230px;
$delivery-image: 'img';
$delivery: (0px, 99px, 0px, -99px, 99px, 99px, 252px, 230px, 'img', 'delivery', );
$lens-name: 'lens';
$lens-x: 169px;
$lens-y: 99px;
$lens-offset-x: -169px;
$lens-offset-y: -99px;
$lens-width: 23px;
$lens-height: 25px;
$lens-total-width: 252px;
$lens-total-height: 230px;
$lens-image: 'img';
$lens: (169px, 99px, -169px, -99px, 23px, 25px, 252px, 230px, 'img', 'lens', );
$minus-small-name: 'minus-small';
$minus-small-x: 239px;
$minus-small-y: 174px;
$minus-small-offset-x: -239px;
$minus-small-offset-y: -174px;
$minus-small-width: 9px;
$minus-small-height: 2px;
$minus-small-total-width: 252px;
$minus-small-total-height: 230px;
$minus-small-image: 'img';
$minus-small: (239px, 174px, -239px, -174px, 9px, 2px, 252px, 230px, 'img', 'minus-small', );
$minus-name: 'minus';
$minus-x: 239px;
$minus-y: 176px;
$minus-offset-x: -239px;
$minus-offset-y: -176px;
$minus-width: 9px;
$minus-height: 2px;
$minus-total-width: 252px;
$minus-total-height: 230px;
$minus-image: 'img';
$minus: (239px, 176px, -239px, -176px, 9px, 2px, 252px, 230px, 'img', 'minus', );
$pay-name: 'pay';
$pay-x: 198px;
$pay-y: 104px;
$pay-offset-x: -198px;
$pay-offset-y: -104px;
$pay-width: 52px;
$pay-height: 52px;
$pay-total-width: 252px;
$pay-total-height: 230px;
$pay-image: 'img';
$pay: (198px, 104px, -198px, -104px, 52px, 52px, 252px, 230px, 'img', 'pay', );
$plus-small-name: 'plus-small';
$plus-small-x: 239px;
$plus-small-y: 156px;
$plus-small-offset-x: -239px;
$plus-small-offset-y: -156px;
$plus-small-width: 8px;
$plus-small-height: 9px;
$plus-small-total-width: 252px;
$plus-small-total-height: 230px;
$plus-small-image: 'img';
$plus-small: (239px, 156px, -239px, -156px, 8px, 9px, 252px, 230px, 'img', 'plus-small', );
$plus-name: 'plus';
$plus-x: 239px;
$plus-y: 165px;
$plus-offset-x: -239px;
$plus-offset-y: -165px;
$plus-width: 8px;
$plus-height: 9px;
$plus-total-width: 252px;
$plus-total-height: 230px;
$plus-image: 'img';
$plus: (239px, 165px, -239px, -165px, 8px, 9px, 252px, 230px, 'img', 'plus', );
$shares-name: 'shares';
$shares-x: 198px;
$shares-y: 0px;
$shares-offset-x: -198px;
$shares-offset-y: 0px;
$shares-width: 54px;
$shares-height: 52px;
$shares-total-width: 252px;
$shares-total-height: 230px;
$shares-image: 'img';
$shares: (198px, 0px, -198px, 0px, 54px, 52px, 252px, 230px, 'img', 'shares', );
$terms-name: 'terms';
$terms-x: 0px;
$terms-y: 0px;
$terms-offset-x: 0px;
$terms-offset-y: 0px;
$terms-width: 99px;
$terms-height: 99px;
$terms-total-width: 252px;
$terms-total-height: 230px;
$terms-image: 'img';
$terms: (0px, 0px, 0px, 0px, 99px, 99px, 252px, 230px, 'img', 'terms', );
$spritesheet-width: 252px;
$spritesheet-height: 230px;
$spritesheet-image: 'img';
$spritesheet-sprites: ($arrow, $assortment, $basket-320, $basket, $checked, $deliverry-2, $delivery, $lens, $minus-small, $minus, $pay, $plus-small, $plus, $shares, $terms, );
$spritesheet: (252px, 230px, 'img', $spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
